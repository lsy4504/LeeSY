<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.ddit.member.dao.IMemberDAO"><!--mybatis는 주로 쓰는 dao파일의 경로를 네임스페이스로 사용함 -->
	<sql id="selectMemberFrag">
		SELECT
		MEM_ID, MEM_PASS, MEM_NAME, MEM_REGNO1,MEM_REGNO2,
		TO_CHAR(MEM_BIR,'YYYY-MM-DD') MEM_BIR, MEM_ZIP,
		MEM_ADD1,MEM_ADD2,MEM_HOMETEL,
		MEM_COMTEL,MEM_HP,MEM_MAIL,MEM_JOB,MEM_LIKE,
		MEM_MEMORIAL,TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY
		,MEM_MILEAGE,
		MEM_DELETE,MEM_AUTH
		FROM MEMBER
	</sql>
	<sql id="searchFrag">
		<where>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)">
				<if test="searchType.equals('name')" >
					MEM_NAME like '%'||#{searchWord}||'%'
				</if>
				<if test="searchType.equals('addr')">
					MEM_ADD1 like '%'||#{searchWord}||'%'
				</if>
				<if test="searchType.equals('all')">
					MEM_ADD1 like '%'||#{searchWord}||'%'
					OR
					MEM_NAME like '%'||#{searchWord}||'%'
				</if>
			</if>
		</where>
		
	</sql>


	<select id="selectTotalRecord" parameterType="pagingVO"
		resultType="long">
		SELECT COUNT(*)
		FROM MEMBER
		<include refid="searchFrag" />


	</select>
	<select id="selectMemberList" parameterType="pagingVO"
		resultType="memberVO"><!--마이 바티스의 경우 dao메소드 명과 동일해야함 -->
		select B.*
		FROM(
		SELECT ROWNUM RNUM, A.*
		FROM (

		<include refid="kr.or.ddit.member.dao.IMemberDAO.selectMemberFrag" />
		<include refid="searchFrag" />
		ORDER BY ROWID DESC) A )B
	    			<![CDATA[
	    			WHERE RNUM>=#{startRow} AND RNUM<=#{endRow}
	    			]]>
	</select>
	<resultMap type="memberVO" id="memberMap">
		<id  property="mem_id" column="MEM_ID" /><!--pk는 id로 설정  -->
		<result property="mem_auth" column="MEM_AUTH" />
		<result property="mem_pass" column="MEM_PASS" />
		<result property="mem_name" column="MEM_NAME" />
		<result property="mem_regno1" column="MEM_REGNO1" />
		<result property="mem_regno2" column="MEM_REGNO2" />
		<result property="mem_bir" column="MEM_BIR" />
		<result property="mem_zip" column="MEM_ZIP" />
		<result property="mem_add1" column="MEM_ADD1" />
		<result property="mem_add2" column="MEM_ADD2" />
		<result property="mem_hometel" column="MEM_HOMETEL" />
		<result property="mem_comtel" column="MEM_COMTEL" />
		<result property="mem_hp" column="MEM_HP" />
		<result property="mem_mail" column="MEM_MAIL" />
		<result property="mem_job" column="MEM_JOB" />
		<result property="mem_like" column="MEM_LIKE" />
		<result property="mem_memorial" column="MEM_MEMORIAL" />
		<result property="mem_memorialday" column="MEM_MEMORIALDAY" />
		<result property="mem_mileage" column="MEM_MILEAGE" />
		<result property="mem_delete" column="MEM_DELETE"/>
		<!-- <association property=""></association> 1:1 관계 -->
<!-- 		<collection property=""></collection>  1:N관계-->
		<collection property="prodList" resultMap="prodMap"></collection>
	</resultMap>
	<resultMap type="prodVO" id="prodMap">
		<result property="prod_id" column="PROD_ID"/>
		<result property="prod_name" column="PROD_NAME"/>
		<result property="prod_cost" column="PROD_COST"/>
		<result property="prod_price" column="PROD_PRICE"/>
		<result property="prod_outline" column="PROD_OUTLINE"/>
	
	</resultMap>
	<select id="selectMember" parameterType="string" resultMap="memberMap">
			SELECT
		MEM_ID, MEM_PASS, MEM_NAME, MEM_REGNO1,MEM_REGNO2,
		TO_CHAR(MEM_BIR,'YYYY-MM-DD') MEM_BIR, MEM_ZIP,
		MEM_ADD1,MEM_ADD2,MEM_HOMETEL,
		MEM_COMTEL,MEM_HP,MEM_MAIL,MEM_JOB,MEM_LIKE,
		MEM_MEMORIAL,TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY
		,MEM_MILEAGE,
		MEM_DELETE,MEM_AUTH,PROD_ID,PROD_NAME,PROD_COST,PROD_PRICE,PROD_OUTLINE
		FROM MEMBER LEFT OUTER JOIN CART ON(MEM_ID=CART_MEMBER)
		LEFT OUTER JOIN PROD ON(CART_PROD=PROD_ID)
		WHERE MEM_ID= #{asd}
	</select>
	<insert id="insertMember" parameterType="memberVO">
		INSERT INTO MEMBER (
		MEM_ID,MEM_PASS,MEM_NAME,MEM_REGNO1,
		MEM_REGNO2,MEM_BIR,MEM_ZIP,MEM_ADD1,
		MEM_ADD2,MEM_HOMETEL,MEM_COMTEL,
		MEM_HP,MEM_MAIL,MEM_JOB,MEM_LIKE,
		MEM_MEMORIAL,MEM_MEMORIALDAY,MEM_MILEAGE
		,MEM_AUTH
		) VALUES (
		#{mem_id},#{mem_pass},#{mem_name},#{mem_regno1},
		#{mem_regno2},TO_DATE(#{mem_bir},'YYYY-MM-DD'),#{mem_zip},#{mem_add1},
		#{mem_add2},#{mem_hometel},#{mem_comtel},
		#{mem_hp},#{mem_mail},#{mem_job},#{mem_like},
		#{mem_memorial},TO_DATE(#{mem_memorialday},'YYYY-MM-DD'),1000
		,'ROLE_USER'

		)
	</insert>
	<update id="updateMember" parameterType="memberVO">
		update member set
		MEM_NAME=#{mem_name},
		MEM_ZIP=#{mem_zip},
		MEM_ADD1=#{mem_add1},
		MEM_ADD2=#{mem_add2},
		MEM_HOMETEL=#{mem_hometel},
		MEM_COMTEL=#{mem_comtel},
		MEM_HP=#{mem_hp},
		MEM_MAIL=#{mem_mail},
		MEM_JOB=#{mem_job},
		MEM_LIKE=#{mem_like},
		MEM_MEMORIAL=#{mem_memorial},
		MEM_MEMORIALDAY=TO_DATE(#{mem_memorialday},'YYYY-MM-DD')
		where MEM_ID=#{mem_id}


	</update>
	<delete id="deleteMember" parameterType="String">
		update member set
		MEM_DELETE='Y'
		where MEM_ID=#{asd}
	</delete>


</mapper>
