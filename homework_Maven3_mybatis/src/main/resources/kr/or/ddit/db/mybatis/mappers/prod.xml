<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.IProdDAO">

	<sql id="selectProdFrag">
		SELECT A.PROD_ID, A.PROD_NAME, B.LPROD_NM, C.BUYER_NAME,
		A.PROD_PRICE,A.PROD_OUTLINE,A.PROD_MILEAGE
		FROM PROD A, LPROD B, BUYER
		C
		WHERE A.PROD_LGU=B.LPROD_GU
		AND B.LPROD_GU=C.BUYER_LGU
		AND A.PROD_BUYER=C.BUYER_ID
	</sql>
	<sql id="searchFrag">
	<where>
		<if test="searchVO!=null">
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.prod_lgu)">
					and PROD_LGU=#{searchVO.prod_lgu}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.prod_buyer)">
					and PROD_BUYER=#{searchVO.prod_buyer}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.prod_name)">
					and PROD_NAME=#{searchVO.prod_name}
		</if>
		</if>
	</where>
</sql>
	<select id="selectTotalRecord" resultType="long" parameterType="pagingVO">
		SELECT COUNT(*)
		FROM PROD
		<include refid="searchFrag" />
	
	</select>
	<select id="selectProdList" parameterType="pagingVO" resultType="prodVO" >
		SELECT A.*
		FROM(
		SELECT ROWNUM RNUM, PROD_ID, PROD_NAME, PROD_PRICE,
		PROD_OUTLINE,
		PROD_MILEAGE,
		LPROD_NM, BUYER_NAME
		FROM PROD INNER JOIN
		LPROD ON(PROD_LGU=LPROD_GU)
		INNER JOIN BUYER ON(PROD_BUYER=BUYER_ID)
		<include refid="searchFrag" />
		) A
      <![CDATA[     
       WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
       ]]>

	</select>
	<resultMap type="prodVO" id="prodMap" autoMapping="true">
		<id property="prod_id" column="PROD_ID"/>
		<association property="buyer"  autoMapping="true" javaType="buyerVO"/>
	
		<collection property="customers" column="PROD_ID" select="selectCustomers" ></collection>
	</resultMap>
		<select id="selectCustomers" resultType="memberVO">
		SELECT MEM_ID,
		MEM_NAME, MEM_ADD1, MEM_ADD2, MEM_HP, MEM_MAIL
		FROM CART INNER JOIN
		MEMBER ON (CART_MEMBER=MEM_ID)
		WHERE CART_PROD=#{prod_id}
	</select>
		
	
	<select id="selectProd" parameterType="String" resultMap="prodMap">
	SELECT
		PROD_ID, PROD_NAME, PROD_LGU,
		PROD_BUYER, PROD_COST,
		PROD_PRICE,
		PROD_SALE, PROD_OUTLINE, PROD_DETAIL,
		PROD_IMG,
		PROD_TOTALSTOCK,
		TO_CHAR(PROD_INSDATE,'YYYY-MM-DD') PROD_INSDATE,
		PROD_PROPERSTOCK,
		PROD_SIZE, PROD_COLOR,
		PROD_DELIVERY, PROD_UNIT,
		PROD_QTYIN,
		PROD_QTYSALE, PROD_MILEAGE
		,LPROD_NM,BUYER_NAME,BUYER_ADD1,BUYER_CHARGER,BUYER_COMTEL
		FROM PROD
		INNER JOIN LPROD ON(PROD_LGU=LPROD_GU)
		INNER JOIN BUYER
		ON(PROD_BUYER=BUYER_ID)
		WHERE PROD_ID = #{data}
	</select>
	<insert id="insertProd" parameterType="prodVO">
		<selectKey order="BEFORE" resultType="String" keyProperty="prod_id">
			<!-- pk생성구역 -->
			SELECT
			#{prod_lgu}||lpad(nvl(to_number(substr(MAX(prod_id),5)),0)+1,6,'0')
			FROM prod
			where prod_lgu=#{prod_lgu}
		</selectKey>
		INSERT INTO prod (
		PROD_ID,PROD_NAME,PROD_LGU,
		PROD_BUYER,PROD_COST,PROD_PRICE,
		PROD_SALE,PROD_OUTLINE,PROD_DETAIL,
		PROD_IMG,PROD_TOTALSTOCK,PROD_INSDATE,
		PROD_PROPERSTOCK,PROD_SIZE,PROD_COLOR,
		PROD_DELIVERY,PROD_UNIT,PROD_QTYIN,
		PROD_QTYSALE,PROD_MILEAGE
		) VALUES (
		#{prod_id},#{prod_name},#{prod_lgu},#{prod_buyer},
		#{prod_cost},#{prod_price},#{prod_sale},#{prod_outline},
		#{prod_detail},#{prod_img,jdbcType=VARCHAR},#{prod_totalstock},TO_DATE(#{prod_insdate,jdbcType=DATE},'YYYY-MM-DD'),
		#{prod_properstock},#{prod_size},#{prod_color},#{prod_delivery},
		#{prod_unit},#{prod_qtyin},#{prod_qtysale},
		#{prod_mileage}
)
	</insert>
	<update id="updatePord" parameterType="prodVO">
	update prod set 
		  prod_name   =   #{prod_name},
    prod_cost   =   #{prod_cost},
    prod_price   =   #{prod_price},
    prod_sale   =   #{prod_sale},
    prod_outline   =   #{prod_outline},
    prod_detail   =   #{prod_detail},
    
    
    prod_totalstock   =   #{prod_totalstock},
    prod_properstock   =   #{prod_properstock},
    prod_size   =   #{prod_size},
    prod_color   =   #{prod_color},
    prod_delivery   =   #{prod_delivery},
    prod_unit   =   #{prod_unit},
    prod_qtyin   =   #{prod_qtyin},
    prod_qtysale   =   #{prod_qtysale},
    prod_mileage   =   #{prod_mileage}
    <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(prod_img)">
    , prod_img   =   #{prod_img}
    </if>
WHERE PROD_ID = #{prod_id}
	</update>
	

</mapper>